(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/ames-nowell/Tests/1-in.json /home/vagrant/repos/C/ames-nowell/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq()
  ()
  -2
  0
  1
  #t
  #f
  "hello"
  null
  (1 2 3)
  ()
  #hasheq((abc . 1) (def . 2)))
(*** expected)
'(#hasheq()
  ()
  2
  0
  -1
  #f
  #t
  "olleh"
  null
  (-3 -2 -1)
  ()
  #hasheq((abc . -1) (def . -2)))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/angeles/Tests/3-in.json /home/vagrant/repos/C/angeles/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 290 (char 289)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 290 (char 289)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 290 (char 289)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 290 (char 289)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'((#hasheq((member1
            .
            #hasheq((active . #t)
                    (age . 4)
                    (city . "New York")
                    (name . "John"))))
   #hasheq((member2 . #hasheq((age . -78) (city . "boston") (name . "brian"))))
   #hasheq((member3 . #hasheq((active . #f) (age . null) (name . "nobody")))))
  (12 "apple" -9 #hasheq((apple . "good")))
  (#hasheq((number1 . 1))
   #hasheq((number2 . "two"))
   #hasheq((number3 . null))
   #t))
(*** expected)
'((#hasheq((member3 . #hasheq((active . #t) (age . null) (name . "ydobon"))))
   #hasheq((member2 . #hasheq((age . 78) (city . "notsob") (name . "nairb"))))
   #hasheq((member1
            .
            #hasheq((active . #f)
                    (age . -4)
                    (city . "kroY weN")
                    (name . "nhoJ")))))
  (#hasheq((apple . "doog")) 9 "elppa" -12)
  (#f
   #hasheq((number3 . null))
   #hasheq((number2 . "owt"))
   #hasheq((number1 . -1))))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/angelina/Tests/1-in.json /home/vagrant/repos/C/angelina/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 15 (char 14)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 15 (char 14)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 15 (char 14)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 15 (char 14)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((one . "love"))
  #hasheq((key . "value"))
  #t
  #f
  "string"
  (1 2 3)
  #hasheq((again . "same"))
  null)
(*** expected)
'(#hasheq((one . "evol"))
  #hasheq((key . "eulav"))
  #f
  #t
  "gnirts"
  (-3 -2 -1)
  #hasheq((again . "emas"))
  null)
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/angelina/Tests/2-in.json /home/vagrant/repos/C/angelina/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a
           .
           (1000000000000000000000000000000000
            (-77.9999999999
             null
             ()
             #t
             (#f #hasheq((null . (null null #hasheq())) (true . null))))
            3
            #hasheq((b . #hasheq((c . #hasheq()))))))))
(*** expected)
'(#hasheq((a
           .
           (#hasheq((b . #hasheq((c . #hasheq()))))
            -3
            ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
             #f
             ()
             null
             77.9999999999)
            -1000000000000000000000000000000000))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((b . #hasheq((c . #hasheq()))))
              -3
              ((#hasheq((null . (#hasheq() null null)) (true . null)) #t)
               #f
               ()
               null
               77.9999999999)
              -1000000000000000000000000000000000)))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/apache/Tests/1-in.json /home/vagrant/repos/C/apache/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((Array . (-5 7 22.8))
          (Boolean . #t)
          (Double . 12.2212685)
          (Nothing . null)
          (Number . 8)
          (String . "helloworld")
          (massiveVal . 6546813548)))
(*** expected)
'(#hasheq((Array . (-22.8 -7 5))
          (Boolean . #f)
          (Double . -12.2212685)
          (Nothing . null)
          (Number . -8)
          (String . "dlrowolleh")
          (massiveVal . -6546813548)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((Array . (-22.8 -7 5))
            (Boolean . #f)
            (Double . -12.2212685)
            (Nothing . null)
            (Number . -8)
            (String . "dlrowolleh")
            (massiveVal . -6546813548))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/apalachicola/Tests/1-in.json /home/vagrant/repos/C/apalachicola/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 137 (char 136)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 137 (char 136)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 137 (char 136)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 137 (char 136)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 181 (char 180)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((keyfive . null)
          (keyfour . #f)
          (keyone . 10)
          (keythree . ("a" "bc" "cde"))
          (keytwo . #hasheq((name . "matthias") (professor . #t)))
          (keyzero . "abcde"))
  "abc"
  1
  #f
  #t
  #hasheq((name . "matthias") (professor . #t)))
(*** expected)
'(#hasheq((keyfive . null)
          (keyfour . #t)
          (keyone . -10)
          (keythree . ("edc" "cb" "a"))
          (keytwo . #hasheq((name . "saihttam") (professor . #f)))
          (keyzero . "edcba"))
  "cba"
  -1
  #t
  #f
  #hasheq((name . "saihttam") (professor . #f)))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/apalachicola/Tests/2-in.json /home/vagrant/repos/C/apalachicola/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 14 (char 13)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(-234910485012
  "hello"
  ("one" "two" "three")
  null
  null
  #hasheq((keyone . #hasheq((keyonea . 8199) (keyoneb . "yup")))
          (keytwo . (1 -6 -18 0.135))
          (keyzero . #f))
  "hey"
  (#f null ("no" "yes" 24590 #f) #hasheq((keythree . ()))))
(*** expected)
'(234910485012
  "olleh"
  ("eerht" "owt" "eno")
  null
  null
  #hasheq((keyone . #hasheq((keyonea . -8199) (keyoneb . "puy")))
          (keytwo . (-0.135 18 6 -1))
          (keyzero . #t))
  "yeh"
  (#hasheq((keythree . ())) (#t -24590 "sey" "on") null #t))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/apalachicola/Tests/3-in.json /home/vagrant/repos/C/apalachicola/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(null
  #f
  null
  #t
  #hasheq((keyzero . #t))
  #hasheq((keyone . "boop"))
  -3495792.333333
  "beep"
  #hasheq((keytwo . (#f #t #t #f)))
  (5498635 "hullo" null #f #t ("omg" "yeah" "no") "yes"))
(*** expected)
'(null
  #t
  null
  #f
  #hasheq((keyzero . #f))
  #hasheq((keyone . "poob"))
  3495792.333333
  "peeb"
  #hasheq((keytwo . (#t #f #f #t)))
  ("sey" ("on" "haey" "gmo") #f #t null "olluh" -5498635))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/arapaho/Tests/1-in.json /home/vagrant/repos/C/arapaho/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((arr . (1 2 3 4 5))
          (bool . #t)
          (null_key . null)
          (num . -1)
          (obj
           .
           #hasheq((arr
                    .
                    (1 "abc" #hasheq((obj . #hasheq((num . 5))) (str . "hi"))))
                   (num . 2)
                   (str . "nested")))
          (str . "value")))
(*** expected)
'(#hasheq((arr . (-5 -4 -3 -2 -1))
          (bool . #f)
          (null_key . null)
          (num . 1)
          (obj
           .
           #hasheq((arr
                    .
                    (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                     "cba"
                     -1))
                   (num . -2)
                   (str . "detsen")))
          (str . "eulav")))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((arr . (-5 -4 -3 -2 -1))
            (bool . #f)
            (null_key . null)
            (num . 1)
            (obj
             .
             #hasheq((arr
                      .
                      (#hasheq((obj . #hasheq((num . -5))) (str . "ih"))
                       "cba"
                       -1))
                     (num . -2)
                     (str . "detsen")))
            (str . "eulav"))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/arapaho/Tests/3-in.json /home/vagrant/repos/C/arapaho/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((level
           .
           #hasheq((level
                    .
                    #hasheq((level
                             .
                             #hasheq((level
                                      .
                                      #hasheq((level
                                               .
                                               #hasheq((level
                                                        .
                                                        #hasheq((level
                                                                 .
                                                                 #hasheq((level
                                                                          .
                                                                          #hasheq((level
                                                                                   .
                                                                                   #hasheq((end
                                                                                            .
                                                                                            "rabbit")))))
                                                                         (one
                                                                          .
                                                                          1)
                                                                         (two
                                                                          .
                                                                          2)))))))))))))))))
(*** expected)
'(#hasheq((level
           .
           #hasheq((level
                    .
                    #hasheq((level
                             .
                             #hasheq((level
                                      .
                                      #hasheq((level
                                               .
                                               #hasheq((level
                                                        .
                                                        #hasheq((level
                                                                 .
                                                                 #hasheq((level
                                                                          .
                                                                          #hasheq((level
                                                                                   .
                                                                                   #hasheq((end
                                                                                            .
                                                                                            "tibbar")))))
                                                                         (one
                                                                          .
                                                                          -1)
                                                                         (two
                                                                          .
                                                                          -2)))))))))))))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((level
             .
             #hasheq((level
                      .
                      #hasheq((level
                               .
                               #hasheq((level
                                        .
                                        #hasheq((level
                                                 .
                                                 #hasheq((level
                                                          .
                                                          #hasheq((level
                                                                   .
                                                                   #hasheq((level
                                                                            .
                                                                            #hasheq((level
                                                                                     .
                                                                                     #hasheq((end
                                                                                              .
                                                                                              "tibbar")))))
                                                                           (one
                                                                            .
                                                                            -1)
                                                                           (two
                                                                            .
                                                                            -2))))))))))))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/arches/Tests/2-in.json /home/vagrant/repos/C/arches/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(() #hasheq((second . (null 113 "hi"))) #hasheq((hello . #f)))
(*** expected)
'(() #hasheq((second . ("ih" -113 null))) #hasheq((hello . #t)))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/ashland/Tests/1-in.json /home/vagrant/repos/C/ashland/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((list . (0 "zy" 2))
          (num . 12)
          (obj . #hasheq((x . "one") (y . "two")))
          (str . "bar")))
(*** expected)
'(#hasheq((list . (-2 "yz" 0))
          (num . -12)
          (obj . #hasheq((x . "eno") (y . "owt")))
          (str . "rab")))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((list . (-2 "yz" 0))
            (num . -12)
            (obj . #hasheq((x . "eno") (y . "owt")))
            (str . "rab"))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/ashley/Tests/2-in.json /home/vagrant/repos/C/ashley/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(100)
(*** expected)
'(-100)
(*** but received)
'(((plain fast with-newline plain-unicode) (-100))
  ((plain fast with-newline escaped-unicode) (-100))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (-100))
  ((plain slow with-newline escaped-unicode) (-100))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (-100))
  ((pretty fast with-newline escaped-unicode) (-100))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (-100))
  ((pretty slow with-newline escaped-unicode) (-100))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/ashley/Tests/3-in.json /home/vagrant/repos/C/ashley/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(null)
(*** expected)
'(null)
(*** but received)
'(((plain fast with-newline plain-unicode) (null))
  ((plain fast with-newline escaped-unicode) (null))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (null))
  ((plain slow with-newline escaped-unicode) (null))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (null))
  ((pretty fast with-newline escaped-unicode) (null))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (null))
  ((pretty slow with-newline escaped-unicode) (null))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/beartown/Tests/1-in.json /home/vagrant/repos/C/beartown/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((People . #hasheq((age . 11) (married . #f) (name . "john")))
          (car . null)
          (color . "red")
          (colors . ("red" "blue" "green"))
          (end . #f)
          (number . 1)))
(*** expected)
'(#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
          (car . null)
          (color . "der")
          (colors . ("neerg" "eulb" "der"))
          (end . #t)
          (number . -1)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((People . #hasheq((age . -11) (married . #t) (name . "nhoj")))
            (car . null)
            (color . "der")
            (colors . ("neerg" "eulb" "der"))
            (end . #t)
            (number . -1))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/beaver-brook/Tests/2-in.json /home/vagrant/repos/C/beaver-brook/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'("false")
(*** expected)
'("eslaf")
(*** but received)
'(((plain fast with-newline plain-unicode) ("eslaf"))
  ((plain fast with-newline escaped-unicode) ("eslaf"))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ("eslaf"))
  ((plain slow with-newline escaped-unicode) ("eslaf"))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ("eslaf"))
  ((pretty fast with-newline escaped-unicode) ("eslaf"))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ("eslaf"))
  ((pretty slow with-newline escaped-unicode) ("eslaf"))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/bienville/Tests/1-in.json /home/vagrant/repos/C/bienville/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(("asdf" 1 null #hasheq((hello . "world")) #f 2.2 -1.2))
(*** expected)
'((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa"))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((plain fast with-newline escaped-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((plain slow with-newline escaped-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((pretty fast with-newline escaped-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((pretty slow with-newline escaped-unicode)
   ((1.2 -2.2 #t #hasheq((hello . "dlrow")) null -1 "fdsa")))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/bienville/Tests/2-in.json /home/vagrant/repos/C/bienville/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(1.1111111111111112e+299)
(*** expected)
'(-1.1111111111111112e+299)
(*** but received)
'(((plain fast with-newline plain-unicode) (-1.1111111111111112e+299))
  ((plain fast with-newline escaped-unicode) (-1.1111111111111112e+299))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (-1.1111111111111112e+299))
  ((plain slow with-newline escaped-unicode) (-1.1111111111111112e+299))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (-1.1111111111111112e+299))
  ((pretty fast with-newline escaped-unicode) (-1.1111111111111112e+299))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (-1.1111111111111112e+299))
  ((pretty slow with-newline escaped-unicode) (-1.1111111111111112e+299))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/bienville/Tests/3-in.json /home/vagrant/repos/C/bienville/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((yes
           .
           #hasheq((yes
                    .
                    #hasheq((yes
                             .
                             #hasheq((yes
                                      .
                                      ("alligator"
                                       1234
                                       null
                                       null
                                       null
                                       #f
                                       #t
                                       ("yoss" "chungal")))))))))))
(*** expected)
'(#hasheq((yes
           .
           #hasheq((yes
                    .
                    #hasheq((yes
                             .
                             #hasheq((yes
                                      .
                                      (("lagnuhc" "ssoy")
                                       #f
                                       #t
                                       null
                                       null
                                       null
                                       -1234
                                       "rotagilla"))))))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((yes
             .
             #hasheq((yes
                      .
                      #hasheq((yes
                               .
                               #hasheq((yes
                                        .
                                        (("lagnuhc" "ssoy")
                                         #f
                                         #t
                                         null
                                         null
                                         null
                                         -1234
                                         "rotagilla")))))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 3/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/big-bend/Tests/2-in.json /home/vagrant/repos/C/big-bend/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((array . (1 "hello" #t)) (null . null) (num . 86) (string . "yep")))
(*** expected)
'(#hasheq((array . (#f "olleh" -1))
          (null . null)
          (num . -86)
          (string . "pey")))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((array . (#f "olleh" -1))
            (null . null)
            (num . -86)
            (string . "pey"))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/big-bend/Tests/3-in.json /home/vagrant/repos/C/big-bend/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(("goodbye" #hasheq((sponge . "bob") (square . "pants")) #f -4))
(*** expected)
'((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog"))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((plain fast with-newline escaped-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((plain slow with-newline escaped-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((pretty fast with-newline escaped-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((pretty slow with-newline escaped-unicode)
   ((4 #t #hasheq((sponge . "bob") (square . "stnap")) "eybdoog")))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/biscayne/Tests/1-in.json /home/vagrant/repos/C/biscayne/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 30 (char 29)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 30 (char 29)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 30 (char 29)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 30 (char 29)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'((1 null #f "abcd") #hasheq((abcd . "efgh") (false . #f) (null . null)))
(*** expected)
'(("dcba" #t null -1) #hasheq((abcd . "hgfe") (false . #t) (null . null)))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/biscayne/Tests/2-in.json /home/vagrant/repos/C/biscayne/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 88 (char 87)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 88 (char 87)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 88 (char 87)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 88 (char 87)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((key1 . (3.4 3.5 #hasheq() 0)) (key2 . ()) (key3 . "a"))
  "abcdefghij"
  -23
  #t
  null)
(*** expected)
'(#hasheq((key1 . (0 #hasheq() -3.5 -3.4)) (key2 . ()) (key3 . "a"))
  "jihgfedcba"
  23
  #f
  null)
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/biscayne/Tests/3-in.json /home/vagrant/repos/C/biscayne/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(((#hasheq((key1 . -3.141592653589793) (key2 . "michael")) 2293485234575467.0)
   ()
   #f
   170000000000.0))
(*** expected)
'((-170000000000.0
   #t
   ()
   (-2293485234575467.0
    #hasheq((key1 . 3.141592653589793) (key2 . "leahcim")))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((plain fast with-newline escaped-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((plain slow with-newline escaped-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((pretty fast with-newline escaped-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((pretty slow with-newline escaped-unicode)
   ((-170000000000.0
     #t
     ()
     (-2293485234575467.0
      #hasheq((key1 . 3.141592653589793) (key2 . "leahcim"))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/bitterroot/Tests/1-in.json /home/vagrant/repos/C/bitterroot/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((mykey . "value")))
(*** expected)
'(#hasheq((mykey . "eulav")))
(*** but received)
'(((plain fast with-newline plain-unicode) (#hasheq((mykey . "eulav"))))
  ((plain fast with-newline escaped-unicode) (#hasheq((mykey . "eulav"))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (#hasheq((mykey . "eulav"))))
  ((plain slow with-newline escaped-unicode) (#hasheq((mykey . "eulav"))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (#hasheq((mykey . "eulav"))))
  ((pretty fast with-newline escaped-unicode) (#hasheq((mykey . "eulav"))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (#hasheq((mykey . "eulav"))))
  ((pretty slow with-newline escaped-unicode) (#hasheq((mykey . "eulav"))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/bitterroot/Tests/2-in.json /home/vagrant/repos/C/bitterroot/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . "string")
          (b . 54)
          (c . 5.25)
          (d . #f)
          (e . (1 2 3))
          (f . null)
          (g
           .
           #hasheq((h . "hello")
                   (i . -42)
                   (j . -0.5)
                   (k . #t)
                   (l . ("one" "two" "three"))
                   (m . null)
                   (n . #hasheq((o . "bye")))))))
(*** expected)
'(#hasheq((a . "gnirts")
          (b . -54)
          (c . -5.25)
          (d . #t)
          (e . (-3 -2 -1))
          (f . null)
          (g
           .
           #hasheq((h . "olleh")
                   (i . 42)
                   (j . 0.5)
                   (k . #f)
                   (l . ("eerht" "owt" "eno"))
                   (m . null)
                   (n . #hasheq((o . "eyb")))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . "gnirts")
            (b . -54)
            (c . -5.25)
            (d . #t)
            (e . (-3 -2 -1))
            (f . null)
            (g
             .
             #hasheq((h . "olleh")
                     (i . 42)
                     (j . 0.5)
                     (k . #f)
                     (l . ("eerht" "owt" "eno"))
                     (m . null)
                     (n . #hasheq((o . "eyb"))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/black-hills/Tests/1-in.json /home/vagrant/repos/C/black-hills/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(-1.23e+23)
(*** expected)
'(1.23e+23)
(*** but received)
'(((plain fast with-newline plain-unicode) (1.23e+23))
  ((plain fast with-newline escaped-unicode) (1.23e+23))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (1.23e+23))
  ((plain slow with-newline escaped-unicode) (1.23e+23))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (1.23e+23))
  ((pretty fast with-newline escaped-unicode) (1.23e+23))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (1.23e+23))
  ((pretty slow with-newline escaped-unicode) (1.23e+23))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/borderland/Tests/1-in.json /home/vagrant/repos/C/borderland/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((quiz
           .
           #hasheq((maths
                    .
                    #hasheq((one
                             .
                             #hasheq((answer . "seven")
                                     (correct . #t)
                                     (options . (1 2 3 4))
                                     (question . (2 3 4 "seven"))))
                            (two
                             .
                             #hasheq((answer . "hi")
                                     (correct . #f)
                                     (options . (1 "hi" 3 4))
                                     (question . "hello")))))
                   (sport
                    .
                    #hasheq((one
                             .
                             #hasheq((answer . 21)
                                     (correct . #t)
                                     (options . (20 12 21 2))
                                     (question . "guessmyage")))))))))
(*** expected)
'(#hasheq((quiz
           .
           #hasheq((maths
                    .
                    #hasheq((one
                             .
                             #hasheq((answer . "neves")
                                     (correct . #f)
                                     (options . (-4 -3 -2 -1))
                                     (question . ("neves" -4 -3 -2))))
                            (two
                             .
                             #hasheq((answer . "ih")
                                     (correct . #t)
                                     (options . (-4 -3 "ih" -1))
                                     (question . "olleh")))))
                   (sport
                    .
                    #hasheq((one
                             .
                             #hasheq((answer . -21)
                                     (correct . #f)
                                     (options . (-2 -21 -12 -20))
                                     (question . "egaymsseug")))))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((quiz
             .
             #hasheq((maths
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . "neves")
                                       (correct . #f)
                                       (options . (-4 -3 -2 -1))
                                       (question . ("neves" -4 -3 -2))))
                              (two
                               .
                               #hasheq((answer . "ih")
                                       (correct . #t)
                                       (options . (-4 -3 "ih" -1))
                                       (question . "olleh")))))
                     (sport
                      .
                      #hasheq((one
                               .
                               #hasheq((answer . -21)
                                       (correct . #f)
                                       (options . (-2 -21 -12 -20))
                                       (question . "egaymsseug"))))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/breakheart/Tests/1-in.json /home/vagrant/repos/C/breakheart/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((hello . "world")
          (obj
           .
           #hasheq((hello . "world")
                   (numbers
                    .
                    (1.0
                     2.0
                     "disgust"
                     4.0000000000001
                     #hasheq((number . 123))))
                   (random
                    .
                    (#hasheq((bar . "baz") (foo . "bar"))
                     #hasheq((abc . "def") (ghi . "jkl"))))))))
(*** expected)
'(#hasheq((hello . "dlrow")
          (obj
           .
           #hasheq((hello . "dlrow")
                   (numbers
                    .
                    (#hasheq((number . -123))
                     -4.0000000000001
                     "tsugsid"
                     -2.0
                     -1.0))
                   (random
                    .
                    (#hasheq((abc . "fed") (ghi . "lkj"))
                     #hasheq((bar . "zab") (foo . "rab"))))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((hello . "dlrow")
            (obj
             .
             #hasheq((hello . "dlrow")
                     (numbers
                      .
                      (#hasheq((number . -123))
                       -4.0000000000001
                       "tsugsid"
                       -2.0
                       -1.0))
                     (random
                      .
                      (#hasheq((abc . "fed") (ghi . "lkj"))
                       #hasheq((bar . "zab") (foo . "rab")))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/breakheart/Tests/2-in.json /home/vagrant/repos/C/breakheart/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((foo . #hasheq((bar . "baz") (baz . "bar") (test . "tested")))
          (foobar . #hasheq((barbaz . ("this" "is" "a" "bunch" "of" "stuff"))))
          (what
           .
           #hasheq((not . (#t #f "foo" "bar"))
                   (okay . (null -0.00202020202 100202030))))))
(*** expected)
'(#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
          (foobar . #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
          (what
           .
           #hasheq((not . ("rab" "oof" #t #f))
                   (okay . (-100202030 0.00202020202 null))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((foo . #hasheq((bar . "zab") (baz . "rab") (test . "detset")))
            (foobar
             .
             #hasheq((barbaz . ("ffuts" "fo" "hcnub" "a" "si" "siht"))))
            (what
             .
             #hasheq((not . ("rab" "oof" #t #f))
                     (okay . (-100202030 0.00202020202 null)))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/brook-farm/Tests/3-in.json /home/vagrant/repos/C/brook-farm/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 449 (char 448)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 449 (char 448)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 449 (char 448)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 449 (char 448)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 928 (char 927)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 928 (char 927)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 928 (char 927)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 928 (char 927)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((pl
           .
           (#hasheq((json . #t)
                    (name . "java")
                    (students . ("grace" "billy" "colin" "steph"))
                    (version . (19 0 0)))
            #hasheq((json . #t)
                    (name . "python")
                    (students
                     .
                     ("clemont"
                      "fernanda"
                      "josh"
                      "juilet"
                      "roman"
                      "shannon"
                      "luigi"
                      "zelda"))
                    (version . (2 7 5)))
            #hasheq((json . #t)
                    (name . "go")
                    (students . ("bryce" "alexander"))
                    (version . (1 17 1)))
            #hasheq((json . #t)
                    (name . "scala")
                    (students . ("jack" "trevor"))
                    (version . (3 0 1)))
            #hasheq((json . #t)
                    (name . "racket")
                    (students . null)
                    (version . (8 2))))))
  #hasheq((student
           .
           (#hasheq((id . 5555555) (language . "golang") (name . "bryce"))
            #hasheq((id . 5555444) (language . "golang") (name . "alexander"))
            #hasheq((id . 7777777) (language . "java") (name . "grace"))
            #hasheq((id . 5454545) (language . "python") (name . "jill"))
            #hasheq((id . 1010101) (language . "typescript") (name . "bob"))
            #hasheq((id . 1000000) (language . "c") (name . "anna"))
            #hasheq((id . 8290294) (language . "racket") (name . "matt"))))))
(*** expected)
'(#hasheq((pl
           .
           (#hasheq((json . #f)
                    (name . "tekcar")
                    (students . null)
                    (version . (-2 -8)))
            #hasheq((json . #f)
                    (name . "alacs")
                    (students . ("rovert" "kcaj"))
                    (version . (-1 0 -3)))
            #hasheq((json . #f)
                    (name . "og")
                    (students . ("rednaxela" "ecyrb"))
                    (version . (-1 -17 -1)))
            #hasheq((json . #f)
                    (name . "nohtyp")
                    (students
                     .
                     ("adlez"
                      "igiul"
                      "nonnahs"
                      "namor"
                      "teliuj"
                      "hsoj"
                      "adnanref"
                      "tnomelc"))
                    (version . (-5 -7 -2)))
            #hasheq((json . #f)
                    (name . "avaj")
                    (students . ("hpets" "niloc" "yllib" "ecarg"))
                    (version . (0 0 -19))))))
  #hasheq((student
           .
           (#hasheq((id . -8290294) (language . "tekcar") (name . "ttam"))
            #hasheq((id . -1000000) (language . "c") (name . "anna"))
            #hasheq((id . -1010101) (language . "tpircsepyt") (name . "bob"))
            #hasheq((id . -5454545) (language . "nohtyp") (name . "llij"))
            #hasheq((id . -7777777) (language . "avaj") (name . "ecarg"))
            #hasheq((id . -5555444) (language . "gnalog") (name . "rednaxela"))
            #hasheq((id . -5555555) (language . "gnalog") (name . "ecyrb"))))))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/canyonlands/Tests/3-in.json /home/vagrant/repos/C/canyonlands/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . (1 "hello" 5 "hi" #t #hasheq((name . "woah"))))))
(*** expected)
'(#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . (#hasheq((name . "haow")) #f "ih" -5 "olleh" -1)))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/cape-cod/Tests/3-in.json /home/vagrant/repos/C/cape-cod/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(null)
(*** expected)
'(null)
(*** but received)
'(((plain fast with-newline plain-unicode) (null))
  ((plain fast with-newline escaped-unicode) (null))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (null))
  ((plain slow with-newline escaped-unicode) (null))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (null))
  ((pretty fast with-newline escaped-unicode) (null))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (null))
  ((pretty slow with-newline escaped-unicode) (null))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/caribou/Tests/1-in.json /home/vagrant/repos/C/caribou/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((alexis . #hasheq((computer . "science") (inside . null)))
          (and . #f)
          (connie . -0.01)))
(*** expected)
'(#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
          (and . #t)
          (connie . 0.01)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/caribou/Tests/2-in.json /home/vagrant/repos/C/caribou/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(("hello" 23 #f ("inside" null)))
(*** expected)
'(((null "edisni") #t -23 "olleh"))
(*** but received)
'(((plain fast with-newline plain-unicode) (((null "edisni") #t -23 "olleh")))
  ((plain fast with-newline escaped-unicode)
   (((null "edisni") #t -23 "olleh")))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (((null "edisni") #t -23 "olleh")))
  ((plain slow with-newline escaped-unicode)
   (((null "edisni") #t -23 "olleh")))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (((null "edisni") #t -23 "olleh")))
  ((pretty fast with-newline escaped-unicode)
   (((null "edisni") #t -23 "olleh")))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (((null "edisni") #t -23 "olleh")))
  ((pretty slow with-newline escaped-unicode)
   (((null "edisni") #t -23 "olleh")))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/caribou/Tests/3-in.json /home/vagrant/repos/C/caribou/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((2-in . ("hello" 23 #f ("inside" null)))
          (alexis . #hasheq((computer . "science") (inside . null)))
          (and . #f)
          (connie . -0.01)))
(*** expected)
'(#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
          (alexis . #hasheq((computer . "ecneics") (inside . null)))
          (and . #t)
          (connie . 0.01)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((2-in . ((null "edisni") #t -23 "olleh"))
            (alexis . #hasheq((computer . "ecneics") (inside . null)))
            (and . #t)
            (connie . 0.01))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 3/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/carson/Tests/1-in.json /home/vagrant/repos/C/carson/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((key1 . "hello") (key2 . 32.1)))
(*** expected)
'(#hasheq((key1 . "olleh") (key2 . -32.1)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((key1 . "olleh") (key2 . -32.1))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/carson/Tests/2-in.json /home/vagrant/repos/C/carson/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 22 (char 21)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 34 (char 33)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 34 (char 33)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 34 (char 33)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 34 (char 33)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((a . #t) (b . (null)))
  #hasheq((a
           .
           9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999)))
(*** expected)
'(#hasheq((a . #f) (b . (null)))
  #hasheq((a
           .
           -9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999)))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/cherokee/Tests/1-in.json /home/vagrant/repos/C/cherokee/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((fifth . ())
          (first . #t)
          (fourth . "abcde")
          (second . #f)
          (sixth . #hasheq())
          (third . null)))
(*** expected)
'(#hasheq((fifth . ())
          (first . #f)
          (fourth . "edcba")
          (second . #t)
          (sixth . #hasheq())
          (third . null)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((fifth . ())
            (first . #f)
            (fourth . "edcba")
            (second . #t)
            (sixth . #hasheq())
            (third . null))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/cherokee/Tests/2-in.json /home/vagrant/repos/C/cherokee/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . (#hasheq((aaa . #f) (aab . #t)) #hasheq((aba . 1) (abb . -2))))
          (b . #hasheq((ba . (#f #t)) (bb . (1 -2))))
          (c
           .
           ((#hasheq((caa . (#f #t)) (cab . (1 -2))))
            (#hasheq((cba . (#f #t)) (cbb . (1 -2))))))
          (d . (1 (1 2) (1 2 (1 2 3))))))
(*** expected)
'(#hasheq((a . (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
          (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
          (c
           .
           ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
            (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
          (d . (((-3 -2 -1) -2 -1) (-2 -1) -1))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a
             .
             (#hasheq((aba . -1) (abb . 2)) #hasheq((aaa . #t) (aab . #f))))
            (b . #hasheq((ba . (#f #t)) (bb . (2 -1))))
            (c
             .
             ((#hasheq((cba . (#f #t)) (cbb . (2 -1))))
              (#hasheq((caa . (#f #t)) (cab . (2 -1))))))
            (d . (((-3 -2 -1) -2 -1) (-2 -1) -1)))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/cherokee/Tests/3-in.json /home/vagrant/repos/C/cherokee/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((eighth . 987654321987654321987654321987654321)
          (fifth . -0.8675309)
          (first . 0)
          (fourth . -4000.0)
          (second . 2)
          (seventh . 7.0)
          (sixth . 0)
          (third . 0.3)))
(*** expected)
'(#hasheq((eighth . -987654321987654321987654321987654321)
          (fifth . 0.8675309)
          (first . 0)
          (fourth . 4000.0)
          (second . -2)
          (seventh . -7.0)
          (sixth . 0)
          (third . -0.3)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((eighth . -987654321987654321987654321987654321)
            (fifth . 0.8675309)
            (first . 0)
            (fourth . 4000.0)
            (second . -2)
            (seventh . -7.0)
            (sixth . 0)
            (third . -0.3))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 3/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/chugach/Tests/2-in.json /home/vagrant/repos/C/chugach/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 55 (char 54)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 55 (char 54)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 55 (char 54)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 55 (char 54)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 75 (char 74)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 75 (char 74)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 75 (char 74)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 75 (char 74)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((dimensions . #hasheq((height . 100) (length . 500) (width . 300))))
  #hasheq((materials . ("wood" "marble" "granite"))))
(*** expected)
'(#hasheq((dimensions
           .
           #hasheq((height . -100) (length . -500) (width . -300))))
  #hasheq((materials . ("etinarg" "elbram" "doow"))))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/chugach/Tests/3-in.json /home/vagrant/repos/C/chugach/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((arr . ((-2 -1 0 1 2 3) (#t #f #t #f) (null 1)))))
(*** expected)
'(#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2)))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((arr . ((-1 null) (#t #f #t #f) (-3 -2 -1 0 1 2))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/cibola/Tests/1-in.json /home/vagrant/repos/C/cibola/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(5)
(*** expected)
'(-5)
(*** but received)
'(((plain fast with-newline plain-unicode) (-5))
  ((plain fast with-newline escaped-unicode) (-5))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (-5))
  ((plain slow with-newline escaped-unicode) (-5))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (-5))
  ((pretty fast with-newline escaped-unicode) (-5))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (-5))
  ((pretty slow with-newline escaped-unicode) (-5))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/cibola/Tests/2-in.json /home/vagrant/repos/C/cibola/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(null #f)
(*** expected)
'(null #t)
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/cibola/Tests/3-in.json /home/vagrant/repos/C/cibola/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 102 (char 101)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 102 (char 101)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 102 (char 101)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 102 (char 101)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 144 (char 143)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 144 (char 143)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 144 (char 143)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 144 (char 143)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((key1 . 5)
          (key2 . -20)
          (key3 . 0)
          (key4 . null)
          (key5 . #t)
          (key6 . (#f #t 100))
          (key7 . #hasheq((key . "hello"))))
  (1 #f null #hasheq((x . 55)))
  "welcome")
(*** expected)
'(#hasheq((key1 . -5)
          (key2 . 20)
          (key3 . 0)
          (key4 . null)
          (key5 . #f)
          (key6 . (-100 #f #t))
          (key7 . #hasheq((key . "olleh"))))
  (#hasheq((x . -55)) null #t -1)
  "emoclew")
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/clearwater/Tests/1-in.json /home/vagrant/repos/C/clearwater/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("helloworld" 1 2 3 #f null (1 2 3.5) 2.5 #hasheq((alice . "cat")))
(*** expected)
'("dlrowolleh" -1 -2 -3 #t null (-3.5 -2 -1) -2.5 #hasheq((alice . "tac")))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/clearwater/Tests/3-in.json /home/vagrant/repos/C/clearwater/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'((#hasheq((class1 . #hasheq((students . ("bob" "alice")) (temp . 71.8))))
   #hasheq((class2
            .
            #hasheq((fun . #f)
                    (students . ("becky" "al"))
                    (teacher . null))))))
(*** expected)
'((#hasheq((class2
            .
            #hasheq((fun . #t) (students . ("la" "ykceb")) (teacher . null))))
   #hasheq((class1 . #hasheq((students . ("ecila" "bob")) (temp . -71.8))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((plain fast with-newline escaped-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((plain slow with-newline escaped-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((pretty fast with-newline escaped-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((pretty slow with-newline escaped-unicode)
   ((#hasheq((class2
              .
              #hasheq((fun . #t)
                      (students . ("la" "ykceb"))
                      (teacher . null))))
     #hasheq((class1
              .
              #hasheq((students . ("ecila" "bob")) (temp . -71.8)))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/cleveland/Tests/1-in.json /home/vagrant/repos/C/cleveland/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#t 0 0.5 "a" (1 2) #hasheq((hello . "world")))
(*** expected)
'(#f 0 -0.5 "a" (-2 -1) #hasheq((hello . "dlrow")))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/cochituate/Tests/2-in.json /home/vagrant/repos/C/cochituate/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((hello . "cam")
          (hi
           .
           #hasheq((Cody . null)
                   (Maisy . "toemuncher")
                   (Oreo . #t)
                   (ben . ("lerner" "hamburger" "i" "miss" "my" "cat"))
                   (dan
                    .
                    #hasheq((mac . "andcheese")
                            (once
                             .
                             #hasheq((told
                                      .
                                      ("me"
                                       "the"
                                       "world"
                                       "was"
                                       "gonna"
                                       "roll"
                                       "me"))))
                            (please . "somebody")
                            (ted . #f)
                            (theman . (-2 8 3.14 99 42069))
                            (true . "killer")))))
          (yolo . 7)))
(*** expected)
'(#hasheq((hello . "mac")
          (hi
           .
           #hasheq((Cody . null)
                   (Maisy . "rehcnumeot")
                   (Oreo . #f)
                   (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                   (dan
                    .
                    #hasheq((mac . "eseehcdna")
                            (once
                             .
                             #hasheq((told
                                      .
                                      ("em"
                                       "llor"
                                       "annog"
                                       "saw"
                                       "dlrow"
                                       "eht"
                                       "em"))))
                            (please . "ydobemos")
                            (ted . #t)
                            (theman . (-42069 -99 -3.14 -8 2))
                            (true . "rellik")))))
          (yolo . -7)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((hello . "mac")
            (hi
             .
             #hasheq((Cody . null)
                     (Maisy . "rehcnumeot")
                     (Oreo . #f)
                     (ben . ("tac" "ym" "ssim" "i" "regrubmah" "renrel"))
                     (dan
                      .
                      #hasheq((mac . "eseehcdna")
                              (once
                               .
                               #hasheq((told
                                        .
                                        ("em"
                                         "llor"
                                         "annog"
                                         "saw"
                                         "dlrow"
                                         "eht"
                                         "em"))))
                              (please . "ydobemos")
                              (ted . #t)
                              (theman . (-42069 -99 -3.14 -8 2))
                              (true . "rellik")))))
            (yolo . -7))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/coconino/Tests/1-in.json /home/vagrant/repos/C/coconino/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 18 (char 17)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 21 (char 20)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 21 (char 20)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 21 (char 20)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 21 (char 20)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((hello . "world")) (1 2 () 4 5) 12341234 "asdfj")
(*** expected)
'(#hasheq((hello . "dlrow")) (-5 -4 () -2 -1) -12341234 "jfdsa")
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/coconino/Tests/2-in.json /home/vagrant/repos/C/coconino/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'((1
   2
   3
   "a"
   "b"
   "c"
   #hasheq((dict . #hasheq((xyz . ())))
           (hello . 1234)
           (software . "dev")
           (world . (88 99 10)))
   99.99))
(*** expected)
'((-99.99
   #hasheq((dict . #hasheq((xyz . ())))
           (hello . -1234)
           (software . "ved")
           (world . (-10 -99 -88)))
   "c"
   "b"
   "a"
   -3
   -2
   -1))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((plain fast with-newline escaped-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((plain slow with-newline escaped-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((pretty fast with-newline escaped-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((pretty slow with-newline escaped-unicode)
   ((-99.99
     #hasheq((dict . #hasheq((xyz . ())))
             (hello . -1234)
             (software . "ved")
             (world . (-10 -99 -88)))
     "c"
     "b"
     "a"
     -3
     -2
     -1)))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/coconino/Tests/3-in.json /home/vagrant/repos/C/coconino/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'("true")
(*** expected)
'("eurt")
(*** but received)
'(((plain fast with-newline plain-unicode) ("eurt"))
  ((plain fast with-newline escaped-unicode) ("eurt"))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ("eurt"))
  ((plain slow with-newline escaped-unicode) ("eurt"))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ("eurt"))
  ((pretty fast with-newline escaped-unicode) ("eurt"))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ("eurt"))
  ((pretty slow with-newline escaped-unicode) ("eurt"))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/colville/Tests/1-in.json /home/vagrant/repos/C/colville/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . "zyxw")
          (b . 4500)
          (c . ("x" "y" "z"))
          (d . #t)
          (e . null)
          (f . #hasheq((g . #f) (h . #hasheq((i . "typescript")))))))
(*** expected)
'(#hasheq((a . "wxyz")
          (b . -4500)
          (c . ("z" "y" "x"))
          (d . #f)
          (e . null)
          (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt")))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . "wxyz")
            (b . -4500)
            (c . ("z" "y" "x"))
            (d . #f)
            (e . null)
            (f . #hasheq((g . #t) (h . #hasheq((i . "tpircsepyt"))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/colville/Tests/2-in.json /home/vagrant/repos/C/colville/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 9 (char 8)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("string"
  3650
  #hasheq((object . "object"))
  null
  #hasheq((f . #f) (none . null) (t . #t))
  "test"
  "the"
  "whitespace")
(*** expected)
'("gnirts"
  -3650
  #hasheq((object . "tcejbo"))
  null
  #hasheq((f . #t) (none . null) (t . #f))
  "tset"
  "eht"
  "ecapsetihw")
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/colville/Tests/3-in.json /home/vagrant/repos/C/colville/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(-4
  -3
  -2
  -1
  0
  1
  2
  3
  4
  (1
   2
   3
   "four"
   #hasheq((first . "tsrif")
           (second . ("mixed" "array" #hasheq() (-100 0)))
           (third . #hasheq((nested . "object"))))
   ((42 7 null) null ("reverse" "me"))))
(*** expected)
'(4
  3
  2
  1
  0
  -1
  -2
  -3
  -4
  ((("em" "esrever") null (null -7 -42))
   #hasheq((first . "first")
           (second . ((0 100) #hasheq() "yarra" "dexim"))
           (third . #hasheq((nested . "tcejbo"))))
   "ruof"
   -3
   -2
   -1))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/conecuh/Tests/1-in.json /home/vagrant/repos/C/conecuh/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("hello"
  72
  -38.6
  #f
  null
  (1 2 3)
  ("abcd" "edfg" "hijk")
  #hasheq((a . #t) (b . 1) (c . ("az" "by" "cx"))))
(*** expected)
'("olleh"
  -72
  38.6
  #t
  null
  (-3 -2 -1)
  ("kjih" "gfde" "dcba")
  #hasheq((a . #f) (b . -1) (c . ("xc" "yb" "za"))))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/conecuh/Tests/2-in.json /home/vagrant/repos/C/conecuh/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 45 (char 44)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((age . 30) (car . null) (name . "john"))
  #hasheq((menu
           .
           #hasheq((id . "file")
                   (popup
                    .
                    #hasheq((menuitem
                             .
                             (#hasheq((onclick . "createdoc") (value . "new"))
                              #hasheq((onclick . "opendoc") (value . "open"))
                              #hasheq((onclick . "savedoc")
                                      (value . "save"))))))
                   (value . "file")))))
(*** expected)
'(#hasheq((age . -30) (car . null) (name . "nhoj"))
  #hasheq((menu
           .
           #hasheq((id . "elif")
                   (popup
                    .
                    #hasheq((menuitem
                             .
                             (#hasheq((onclick . "codevas") (value . "evas"))
                              #hasheq((onclick . "codnepo") (value . "nepo"))
                              #hasheq((onclick . "codetaerc")
                                      (value . "wen"))))))
                   (value . "elif")))))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/congaree/Tests/1-in.json /home/vagrant/repos/C/congaree/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . #t)
          (b . 27.5)
          (c . -84)
          (d . null)
          (e . "volcano")
          (f . #hasheq((f0 . #f) (f1 . "great") (f2 . 11.0)))
          (g . (1 -2 7 9))))
(*** expected)
'(#hasheq((a . #f)
          (b . -27.5)
          (c . 84)
          (d . null)
          (e . "onaclov")
          (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
          (g . (-9 -7 2 -1))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . #f)
            (b . -27.5)
            (c . 84)
            (d . null)
            (e . "onaclov")
            (f . #hasheq((f0 . #t) (f1 . "taerg") (f2 . -11.0)))
            (g . (-9 -7 2 -1)))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/coronado/Tests/2-in.json /home/vagrant/repos/C/coronado/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((null . null)
          (other . #hasheq((bool . #f) (number . 2)))
          (thingy . (1 2 3))
          (trickynum . 0)))
(*** expected)
'(#hasheq((null . null)
          (other . #hasheq((bool . #t) (number . -2)))
          (thingy . (-3 -2 -1))
          (trickynum . 0)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((null . null)
            (other . #hasheq((bool . #t) (number . -2)))
            (thingy . (-3 -2 -1))
            (trickynum . 0))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/coronado/Tests/3-in.json /home/vagrant/repos/C/coronado/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("hello"
  #hasheq((hi . "string"))
  null
  #hasheq((bye . 123))
  "cheese"
  123
  null
  (5 10 15))
(*** expected)
'("olleh"
  #hasheq((hi . "gnirts"))
  null
  #hasheq((bye . -123))
  "eseehc"
  -123
  null
  (-15 -10 -5))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/croatan/Tests/2-in.json /home/vagrant/repos/C/croatan/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((array1 . (1 2 3 (4 5 6 (7 8 (9 10)))))
          (json1
           .
           #hasheq((value1 . 4)
                   (value2 . "four")
                   (value3
                    .
                    #hasheq((value4 . (4 44 444))
                            (value5 . null)
                            (value6
                             .
                             #hasheq((value7 . #f) (value8 . -100)))))))
          (lastvalue . null)))
(*** expected)
'(#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
          (json1
           .
           #hasheq((value1 . -4)
                   (value2 . "ruof")
                   (value3
                    .
                    #hasheq((value4 . (-444 -44 -4))
                            (value5 . null)
                            (value6
                             .
                             #hasheq((value7 . #t) (value8 . 100)))))))
          (lastvalue . null)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((array1 . ((((-10 -9) -8 -7) -6 -5 -4) -3 -2 -1))
            (json1
             .
             #hasheq((value1 . -4)
                     (value2 . "ruof")
                     (value3
                      .
                      #hasheq((value4 . (-444 -44 -4))
                              (value5 . null)
                              (value6
                               .
                               #hasheq((value7 . #t) (value8 . 100)))))))
            (lastvalue . null))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/croatan/Tests/3-in.json /home/vagrant/repos/C/croatan/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((array1 . ((1 2 3) (-4.1 -5.2 -6.3 "hello")))
          (json1
           .
           #hasheq((a
                    .
                    #hasheq((json2 . #hasheq((value1 . 4) (value2 . "four")))))
                   (b . #hasheq((value3 . null)))
                   (c . null)
                   (d . "errorlol")))
          (lastvalue . null)))
(*** expected)
'(#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
          (json1
           .
           #hasheq((a
                    .
                    #hasheq((json2
                             .
                             #hasheq((value1 . -4) (value2 . "ruof")))))
                   (b . #hasheq((value3 . null)))
                   (c . null)
                   (d . "lolrorre")))
          (lastvalue . null)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((array1 . (("olleh" 6.3 5.2 4.1) (-3 -2 -1)))
            (json1
             .
             #hasheq((a
                      .
                      #hasheq((json2
                               .
                               #hasheq((value1 . -4) (value2 . "ruof")))))
                     (b . #hasheq((value3 . null)))
                     (c . null)
                     (d . "lolrorre")))
            (lastvalue . null))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/cutler-park/Tests/1-in.json /home/vagrant/repos/C/cutler-park/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . "abc")
          (abc . 54)
          (c . (1 2 null (9 8)))
          (cbd . #hasheq((x . -5.5) (y . null)))))
(*** expected)
'(#hasheq((a . "cba")
          (abc . -54)
          (c . ((-8 -9) null -2 -1))
          (cbd . #hasheq((x . 5.5) (y . null)))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . "cba")
            (abc . -54)
            (c . ((-8 -9) null -2 -1))
            (cbd . #hasheq((x . 5.5) (y . null))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/cutler-park/Tests/2-in.json /home/vagrant/repos/C/cutler-park/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'((56.5
   10
   (1 2 3)
   #hasheq((a . #hasheq((b . #hasheq((c . (4 null #t)))))))
   #f
   ()
   "xy"))
(*** expected)
'(("yx"
   ()
   #t
   #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
   (-3 -2 -1)
   -10
   -56.5))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((plain fast with-newline escaped-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((plain slow with-newline escaped-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((pretty fast with-newline escaped-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((pretty slow with-newline escaped-unicode)
   (("yx"
     ()
     #t
     #hasheq((a . #hasheq((b . #hasheq((c . (#f null -4)))))))
     (-3 -2 -1)
     -10
     -56.5)))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/cutler-park/Tests/3-in.json /home/vagrant/repos/C/cutler-park/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(null)
(*** expected)
'(null)
(*** but received)
'(((plain fast with-newline plain-unicode) (null))
  ((plain fast with-newline escaped-unicode) (null))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) (null))
  ((plain slow with-newline escaped-unicode) (null))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) (null))
  ((pretty fast with-newline escaped-unicode) (null))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) (null))
  ((pretty slow with-newline escaped-unicode) (null))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 3/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/daniel-boone/Tests/1-in.json /home/vagrant/repos/C/daniel-boone/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . (1 2.501 "apple" "blue" #t))
          (b
           .
           #hasheq((c . "green")
                   (d . "false")
                   (e . #hasheq((f . #f) (g . null)))
                   (h . ("at" "ba"))))))
(*** expected)
'(#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
          (b
           .
           #hasheq((c . "neerg")
                   (d . "eslaf")
                   (e . #hasheq((f . #t) (g . null)))
                   (h . ("ab" "ta"))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . (#f "eulb" "elppa" -2.501 -1))
            (b
             .
             #hasheq((c . "neerg")
                     (d . "eslaf")
                     (e . #hasheq((f . #t) (g . null)))
                     (h . ("ab" "ta")))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/daniel-boone/Tests/2-in.json /home/vagrant/repos/C/daniel-boone/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'("banana")
(*** expected)
'("ananab")
(*** but received)
'(((plain fast with-newline plain-unicode) ("ananab"))
  ((plain fast with-newline escaped-unicode) ("ananab"))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ("ananab"))
  ((plain slow with-newline escaped-unicode) ("ananab"))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ("ananab"))
  ((pretty fast with-newline escaped-unicode) ("ananab"))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ("ananab"))
  ((pretty slow with-newline escaped-unicode) ("ananab"))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/daniel-boone/Tests/3-in.json /home/vagrant/repos/C/daniel-boone/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 13 (char 12)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(10002437.658 #f)
(*** expected)
'(-10002437.658 #t)
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/death-valley/Tests/3-in.json /home/vagrant/repos/C/death-valley/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((one_letter . "a") (zero . 0)))
(*** expected)
'(#hasheq((one_letter . "a") (zero . 0)))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((one_letter . "a") (zero . 0))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/delta/Tests/1-in.json /home/vagrant/repos/C/delta/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((bool . #t)
          (int . 1)
          (list . (1 2 3))
          (object . #hasheq((int . 2) (string . "word")))
          (string . "abc")))
(*** expected)
'(#hasheq((bool . #f)
          (int . -1)
          (list . (-3 -2 -1))
          (object . #hasheq((int . -2) (string . "drow")))
          (string . "cba")))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((bool . #f)
            (int . -1)
            (list . (-3 -2 -1))
            (object . #hasheq((int . -2) (string . "drow")))
            (string . "cba"))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 1/2))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/denali/Tests/1-in.json /home/vagrant/repos/C/denali/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 36 (char 35)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 59 (char 58)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 59 (char 58)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 59 (char 58)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 59 (char 58)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((x . (-3 -2 -1)) (y . null) (z . "cba")) "olleh")
(*** expected)
'(#hasheq((x . (1 2 3)) (y . null) (z . "abc")) "hello")
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/deschutes/Tests/1-in.json /home/vagrant/repos/C/deschutes/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("hi" 1 2 3 "h" 4 5)
(*** expected)
'("ih" -1 -2 -3 "h" -4 -5)
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/deschutes/Tests/2-in.json /home/vagrant/repos/C/deschutes/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((a . "abcd")
          (b . 1.2890231480912385e+22)
          (c . #hasheq((d . 12)))
          (e . (1 "qwe" #t null))))
(*** expected)
'(#hasheq((a . "dcba")
          (b . -1.2890231480912385e+22)
          (c . #hasheq((d . -12)))
          (e . (null #f "ewq" -1))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((a . "dcba")
            (b . -1.2890231480912385e+22)
            (c . #hasheq((d . -12)))
            (e . (null #f "ewq" -1)))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/deschutes/Tests/3-in.json /home/vagrant/repos/C/deschutes/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'((#f null #hasheq((a . 12) (b . "hello"))))
(*** expected)
'((#hasheq((a . -12) (b . "olleh")) null #t))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((plain fast with-newline escaped-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((plain slow with-newline escaped-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((pretty fast with-newline escaped-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((pretty slow with-newline escaped-unicode)
   ((#hasheq((a . -12) (b . "olleh")) null #t)))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 3) (partial-score 1))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/de-soto/Tests/1-in.json /home/vagrant/repos/C/de-soto/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 2 (char 1)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(1 null -2 3 #hasheq() () "abc" #f)
(*** expected)
'(-1 null 2 -3 #hasheq() () "cba" #t)
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/dighton-rock/Tests/1-in.json /home/vagrant/repos/C/dighton-rock/Tests/1-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 8 (char 7)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("hello"
  null
  #t
  12
  -1.0000000001
  #hasheq((name_1 . "rachel") (name_2 . "kyle"))
  (1 2 "red" "blue"))
(*** expected)
'("olleh"
  null
  #f
  -12
  1.0000000001
  #hasheq((name_1 . "lehcar") (name_2 . "elyk"))
  ("eulb" "der" -2 -1))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/dighton-rock/Tests/3-in.json /home/vagrant/repos/C/dighton-rock/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 32 (char 31)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 32 (char 31)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 32 (char 31)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 32 (char 31)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 56 (char 55)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 56 (char 55)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 56 (char 55)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 56 (char 55)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'(("nested" ("list" ("times 3")))
  #hasheq((key1 . #t)
          (key2
           .
           #hasheq((key3 . "nested")
                   (key4 . "dict")
                   (key5 . #hasheq((key6 . "racecar"))))))
  #hasheq((list . (#hasheq((color . "blue")) #f -1.0))))
(*** expected)
'(((("3 semit") "tsil") "detsen")
  #hasheq((key1 . #f)
          (key2
           .
           #hasheq((key3 . "detsen")
                   (key4 . "tcid")
                   (key5 . #hasheq((key6 . "racecar"))))))
  #hasheq((list . (1.0 #t #hasheq((color . "eulb"))))))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 0))
(testing /home/vagrant/repos/boise/C/xjson)
(testing /home/vagrant/repos/C/fens/Tests/2-in.json /home/vagrant/repos/C/fens/Tests/2-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 5 (char 4)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 0)
(*** on)
'("hi" 42 (1 "foo" #hasheq((bar . "bar"))))
(*** expected)
'("ih" -42 (#hasheq((bar . "rab")) "oof" -1))
(*** but received)
'(((plain fast with-newline plain-unicode) ())
  ((plain fast with-newline escaped-unicode) ())
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode) ())
  ((plain slow with-newline escaped-unicode) ())
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode) ())
  ((pretty fast with-newline escaped-unicode) ())
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode) ())
  ((pretty slow with-newline escaped-unicode) ())
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


(testing /home/vagrant/repos/C/fens/Tests/3-in.json /home/vagrant/repos/C/fens/Tests/3-out.json)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/home/vagrant/repos/boise/C/xjson", line 43, in <module>
    main()
  File "/home/vagrant/repos/boise/C/xjson", line 32, in main
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/home/vagrant/repos/boise/C/xjson", line 32, in <listcomp>
    list_of_json = [json.loads(value) for value in seperate_json_inputs(raw_input.replace("\n", ""))]
  File "/usr/lib64/python3.6/json/__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python3.6/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python3.6/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
---------------------------------
(*** score 1/2)
(*** on)
'(#hasheq((first . #hasheq((second . #hasheq((third . (1 2 3))))))))
(*** expected)
'(#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1))))))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((plain fast with-newline escaped-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((plain fast with-space plain-unicode) ())
  ((plain fast with-space escaped-unicode) ())
  ((plain slow with-newline plain-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((plain slow with-newline escaped-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((plain slow with-space plain-unicode) ())
  ((plain slow with-space escaped-unicode) ())
  ((pretty fast with-newline plain-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((pretty fast with-newline escaped-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((pretty fast with-space plain-unicode) ())
  ((pretty fast with-space escaped-unicode) ())
  ((pretty slow with-newline plain-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((pretty slow with-newline escaped-unicode)
   (#hasheq((first . #hasheq((second . #hasheq((third . (-3 -2 -1)))))))))
  ((pretty slow with-space plain-unicode) ())
  ((pretty slow with-space escaped-unicode) ()))


()
((passed 0) (total 2) (partial-score 1/2))
