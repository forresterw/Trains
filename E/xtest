#!/bin/python3
import subprocess
import sys

# Constants for testing
NEWLINE_CHAR = "\\r\\n" if sys.platform == 'win32' else "\\n"
RUN_COM = "python " if sys.platform == 'win32' else "./"
TEST_PORT = 53932  # A non standard port will less likely have other traffic


def main():

    # Format JSON to match file spacing
    json1 = "\\n".join([x.replace('\n', '') for x in open("./Tests/1-out.json").readlines()]) + "\\n"
    json2 = "\\n".join([x.replace('\n', '') for x in open("./Tests/2-out.json").readlines()]) + "\\n"
    json3 = "\\n".join([x.replace('\n', '') for x in open("./Tests/3-out.json").readlines()]) + "\\n"

    tests = [
        ("Too many args test", f"{RUN_COM}xtcp 30000 330", f"Too many args{NEWLINE_CHAR}"),
        ("Malformed arg test", f"{RUN_COM}xtcp -30000", f"Malformed port input, Example: 45678{NEWLINE_CHAR}"),
        ("Port too high", f"{RUN_COM}xtcp 70000", f"Port out of range [2048, 65535]{NEWLINE_CHAR}"),
        ("Port too low", f"{RUN_COM}xtcp 1023", f"Port out of range [2048, 65535]{NEWLINE_CHAR}"),
        ("Timeout test", f"{RUN_COM}xtcp {TEST_PORT}", f"No connection in 3 seconds{NEWLINE_CHAR}"),
        ("First JSON test", f"({RUN_COM}xtcp {TEST_PORT} & sleep 1 && cat ./Tests/1-in.json | nc localhost {TEST_PORT})", json1),
        ("Second JSON test", f"({RUN_COM}xtcp {TEST_PORT} & sleep 1 && cat ./Tests/2-in.json | nc localhost {TEST_PORT})", json2),
        ("Third JSON test", f"({RUN_COM}xtcp {TEST_PORT} & sleep 1 && cat ./Tests/3-in.json | nc localhost {TEST_PORT})", json3)
    ]

    total = 0
    for test in tests:
        total += run_test(test)


def run_test(test):
    name = test[0]
    cmd = test[1]
    expected = test[2]

    out = subprocess.check_output(cmd, shell=True)
    out_str = str(out)[2:-1]

    if out_str == expected:
        print(f"Passed: {name}")
        return 1
    else:
        print(f"Failed: {name}")
        print(f"Out: {out_str}")
        print(f"Expected: {expected}")
        print("=============")
        return 0


if __name__ == "__main__":
    main()
